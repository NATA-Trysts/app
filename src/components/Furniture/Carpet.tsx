/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.5 ./models/carpet.glb -t -T --shadows
*/

import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ellipse_2003: THREE.Mesh
    Ellipse_3: THREE.Mesh
    Ellipse002: THREE.Mesh
  }
  materials: {
    Material_0: THREE.MeshStandardMaterial
    Material_53: THREE.MeshStandardMaterial
    Material_45: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/carpet-transformed.glb') as GLTFResult

  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.02, 0]} scale={0.0025}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Ellipse_2003.geometry}
          material={materials.Material_0}
          position={[0, 7.48, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[1.02, 1.02, 1.57]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Ellipse_3.geometry}
          material={materials.Material_53}
          position={[1.05, 10.47, -1.05]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[1.02, 1.02, 1.57]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Ellipse002.geometry}
          material={materials.Material_45}
          position={[0, -7.39, 0]}
          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
          scale={[1.09, 1.09, 1.66]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/carpet-transformed.glb')
